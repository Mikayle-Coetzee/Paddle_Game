<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IRJ9kxopf5Yae5GsHpmduiF1nbohKZ26IQGduiEAAAAAAAAAAAAAAABrAAAArAAAAM0AAABAAAAAAHaG
        KgB2hioGdoYqaXaGKuB2hir/dYQq/2h3Jf9eayLYaXgiVJ67IZaduiH9nboh+p26IaiduiHXnboh/526
        If2duyGTgpobU36VGtiLpR3/m7gh/526If+duiHgnbohaZ26IQaduiEAAAAAAAAAAEEAAADMAAAA1wAA
        ACkICQMAdoYqAXaGKm12hir1doYq/3aGKv92hir/dYUq/2h3Jf9eaiLdanoiVp67IZyduiH6nbohZJ26
        IWSduiH5nbshmYObG1V+lRrdi6Ud/5y4If+duiH/nboh/526If+duiH1nbohbJ26IQAKDAIAAAAAKQAA
        ANYAAADXAAAAH0VPGQB2hiowdoYq43aGKv92hir/doYq/3aGKv92hir/dYUq/2h3Jf9eaiLcansiV567
        IYSduiEknbohJJ67IYKDmxtWfpUa3IulHf+cuCH/nboh/526If+duiH/nboh/526If+duiHjnbohL1xt
        EwAAAAAfAAAA1wAAANcAAAAeQUoXAHaGKoF2hir/doYq/3aGKv92hir/doYq/3aGKv92hir/dYUq/2h3
        Jf9eayLdZXQiTbPWIAaoxyMGgZkbTX6VGt2LpR3/nLgh/526If+duiH/nboh/526If+duiH/nboh/526
        If+duiGBV2cSAAAAAB8AAADXAAAA1wAAACjG4EYEdoYqtXaGKv92hir/doYq/3aGKv92hir/doYq/3aG
        Kv92hir/dYUq/2h3Jf9eayLOWmUiG36WGRt+lRrPi6Ud/5y4If+duiH/nboh/526If+duiH/nboh/526
        If+duiH/nboh/526IbX//zgEAAAAKQAAANYAAADNAAAAP6/GPgd2hirDdoYq/3aGKv92hir/doYq/3aG
        Kv92hir/doYq/3aGKv92hir/dYUq/2l3JfxdaiNUgJgaVYylHfycuCH/nboh/526If+duiH/nboh/526
        If+duiH/nboh/526If+duiH/nbohw+z/MgcAAABAAAAAzQAAAK0AAABp//+4AXaGKrJ2hir/doYq/3aG
        Kv92hir/doYq/3aGKv92hir/doYq/3aGKv92hir/dYQq/217KGOVsR5jm7gh/526If+duiH/nboh/526
        If+duiH/nboh/526If+duiH/nboh/526If+duiGx///BAQAAAGoAAACuAAAAcQAAAKAAAAAAdoYqeXaG
        Kv92hir/doYq/3aGKv92hir/doYq/3aGKv92hir/doYq/3aGKv92hirydIMrOqC+ITuduiHynboh/526
        If+duiH/nboh/526If+duiH/nboh/526If+duiH/nboh/526IXgAAAAAAAAAoQAAAHIAAAAsAAAAvwAA
        ACV9ji0ldoYq2naGKv92hir/doYq/3aGKv92hir/doYq/3aGKv92hir/doYq/3aGKq5zgisKoL4gCp26
        Ia+duiH/nboh/526If+duiH/nboh/526If+duiH/nboh/526If+duiHap8UjJAAAACUAAADAAAAALQAA
        AAMAAACYAAAAeiYrDgB2hipbdoYq7naGKv92hir/doYq/3aGKv92hir/doYq/3aGKv92hirUdoYqMXaG
        KgCduiEAnbohMZ26IdWduiH/nboh/526If+duiH/nboh/526If+duiH/nboh7Z26IVs1PwsAAAAAegAA
        AJgAAAADAAAAAAAAADoAAADDAAAAJv//sQF2hipUdoYq0HaGKvx2hir/doYq/3aGKv92hir3doYqtXWF
        KjKWsh8Wi6UdJHyTGiR8khoVnrshMp26IbaduiH3nboh/526If+duiH/nboh/J26IdCduiFU//+ZAQAA
        ACYAAADDAAAAOgAAAAAAAAAAAAAAAgAAAIwAAACZAAAABwMDAQB2hioadoYqXHaGKo52hiqbdoYqhHaG
        Kkp2hioOgpcmAJ26ITWSrR/Gf5YaxH2TGjKRrB4AnbohDp26IUqduiGEnbohm526IY6duiFcnbohGgUG
        AQAAAAAHAAAAmgAAAIwAAAACAAAAAHaGKhB+jy0WAAAAGgAAALsAAABrAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAnbofAJ26IQCduiEWnbohdJy4Id2LpR3bfZQacn2VGhV+lRoAdo0ZAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAGwAAAC7AAAAGn6PLRh2hioRdoYqLHaGKo2ImzANAAAANwAAAMYAAABcAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAnbohAJ26IQGduiEDnbohWZy5IVhYZxECgJcaAYCXGgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAABcAAAAxwAAADaHmTAOdoYqj3aGKix2hioqdoYq4HaGKoKYrDYEAAAAQwAA
        AMcAAABrAAAABwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ26IQCduiEInbohCJ26IQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAHAAAAbAAAAMcAAABDlao1BHaGKoR2hirgdoYqKnaGKip2hirldoYq9naG
        Kmyzy0ACAAAANwAAALsAAACZAAAAJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAAJoAAAC7AAAAN6e9OwJ2hipvdoYq93aGKuV2hioqdoYqJHaG
        Kt92hir/doYq73aGKm6NoDIGAAAAGQAAAIwAAADEAAAAeQAAACUAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAADAAAAJgAAAHsAAADFAAAAjAAAABmMnzIHdoYqcHaGKvB2hir/doYq3naG
        KiR2hioHdoYqk3aGKvp2hir/doYq9XaGKpl6iislBQUDAwAAADoAAACZAAAAwQAAAKAAAABpAAAAPwAA
        ACgAAAAeAAAAHgAAACkAAABAAAAAagAAAKEAAADBAAAAmQAAADoGBgMDeoorJnaGKpt2hir2doYq/3aG
        Kvl2hiqSdoYqBnaGKgB2hioSdoYqWnaGKnJ2hipzdoYqdXaGKkh2hioFRE4YAAAAAAQAAAAtAAAAcwAA
        AK8AAADNAAAA1gAAANcAAADXAAAA1wAAAM0AAACtAAAAcAAAACsAAAAERk8ZAHaGKgV2hipIdoYqc3aG
        KnF2hipwdoYqWXaGKhF2hioAgIABAQAAAAAAD/AAAH/+AAD8PwAB+B+AA/gfwIf4H+GP/D/xH/gf+B/4
        H/gf+B/4OAAAHDAAAAwgAAAMIAAABCAAAAQAAAAAAAAAAAAAAAAgAAAEAAAAABABgAiAAAABhAQgIQP4
        H8AB+B+AAP5/AAB//gAAD/AAAAAAAICAAQE=
</value>
  </data>
</root>